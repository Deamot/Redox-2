/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            // --------------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                   ---                |  6    |  7    |  8    |  9   | 0  |    BKSP   |
            // | TAB   |  Q  |  W  |   E   |  R  |  T  |   (   |           ---        |  )    |  Y    |  U    |  I    |  O   | P  |     -     |
            // | CTRL  |  A  |  S  |   D   |  F  |  G  |   [   |           ---        |  ]    |  H    |  J    |  K    |  L   | ;  |     '     |
            // | SHIFT |  Z  |  X  |   C   |  V  |  B  | PG_UP | PG_DOWN | --- | HOME | END   |  N    |  M    |  ,    |  .   | /  | SHFT(RET) |
            // | CRTL  | ALT | GUI | LOWER |    GUI    | SPACE | RET | --- | RET | BKSP |     RAISE     | LEFT  | DOWN | UP |   RIGHT   |

            bindings = <
             &kp DEL            &kp N0          &kp N9        &kp N8  &kp N7   &kp N6                                                  &kp N6           &kp N7        &kp N8          &kp N9            &kp N0              &kp DEL
       &kp BACKSPACE             &kp P           &kp O         &kp I   &kp U    &kp T  &lt 1 GRAVE                        &lt 1 GRAVE   &kp Y            &kp U         &kp I           &kp O             &kp P        &kp BACKSPACE
           &kp ENTER          &kp SEMI           &kp L         &kp K   &kp F    &kp H        &mo 2                              &mo 2   &kp H            &kp J         &kp K           &kp L          &kp SEMI            &kp ENTER
 &mt RIGHT_SHIFT SQT         &kp SLASH         &kp DOT     &kp COMMA   &kp M    &kp N     &kp RGUI    &kp ESC    &kp ESC     &kp RGUI   &kp N            &kp M     &kp COMMA         &kp DOT          &kp FSLH  &mt RIGHT_SHIFT SQT
   &kp RIGHT_BRACKET  &kp LEFT_BRACKET  &kp DOWN_ARROW  &kp UP_ARROW          &kp SQT    &kp MINUS  &kp EQUAL  &kp EQUAL    &kp MINUS          &kp SQT          &kp UP_ARROW  &kp DOWN_ARROW  &kp LEFT_BRACKET    &kp RIGHT_BRACKET
            >;
        };

        layer_1 {
            // --------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |   4   |  5  |                   ---              |  6  |  7  |   8  |  9   |  0  |  DEL  |
            // | ESC   |  1  |  2  |   3   |   4   |  5  |   (   |           ---        |  )  |  6  |  7  |   8  |  9   |  0  |  DEL  |
            // | CTRL  |  -  |  =  |   [   |   ]   |  \  |   [   |           ---        |  ]  |  *  |  4  |   5  |  6   |  +  |   -   |
            // | SHIFT | ESC | GUI | COPY  | PASTE |     | PG_UP | PG_DOWN | --- | HOME | END |  \  |  1  |   2  |  3   | RET |  RET  |
            // | CRTL  | ALT | GUI | LOWER |     GUI     | LOWER | SPACE   | --- | DEL  |  0  |    RAISE  | LEFT | DOWN | UP  | RIGHT |

            bindings = <
  &trans     &trans     &trans     &trans     &trans     &trans                                           &trans          &trans  &trans  &trans       &trans        &trans
 &kp ESC     &kp N1     &kp N2     &kp N3     &kp N4     &kp N5  &trans                  &trans           &kp N6          &kp N7  &kp N8  &kp N9       &kp N0       &kp DEL
  &trans  &kp MINUS  &kp EQUAL   &kp LBKT   &kp RBKT   &kp BSLH  &trans                  &trans  &kp KP_MULTIPLY          &kp N4  &kp N5  &kp N6  &kp KP_PLUS  &kp KP_MINUS
  &trans    &kp ESC   &kp LGUI  &kp LG(C)  &kp LG(V)  &kp GRAVE  &trans  &trans  &trans  &trans    &kp KP_DIVIDE          &kp N1  &kp N2  &kp N3      &kp RET       &kp RET
  &trans     &trans     &trans     &trans                &trans  &trans  &trans  &trans  &kp N0                    &mo 3          &trans  &trans       &trans        &trans
            >;
        };

        layer_2 {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                   ---                |  6   |  7   |  8   |  9   |  0    |  DEL  |
            // | ESC   |  !  |  @  |   #   |  $  |  %  |   (   |           ---        |  )    |  ^   |  &   |  *   |  (   |  )    |  DEL  |
            // | CTRL  |  _  |  +  |   {   |  }  | "|" |   [   |           ---        |  ]    | HOME | PGUP | PRSC | UP   |  `    |   ~   |
            // | SHIFT | ESC | GUI |   (   |  )  |     | PG_UP | PG_DOWN | --- | HOME | END   | END  | PGDN | LEFT | DOWN | RIGHT |  RET  |
            // | CRTL  | ALT | GUI | LOWER |    GUI    | LOWER | SPACE   | --- | DEL  | SPACE |    RAISE    | LEFT | DOWN | UP    | RIGHT |

            bindings = <
  &trans     &trans    &trans    &trans    &trans     &trans                                     &trans             &trans     &trans    &trans         &trans     &trans
 &kp ESC   &kp EXCL    &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &trans                  &trans  &kp CARET           &kp AMPS  &kp ASTRK  &kp LPAR       &kp RPAR    &kp DEL
  &trans  &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC   &kp PIPE  &trans                  &trans   &kp HOME          &kp PG_UP  &kp PSCRN    &kp UP      &kp GRAVE  &kp TILDE
  &trans    &kp ESC  &kp LGUI  &kp LPAR  &kp RPAR  &kp TILDE  &trans  &trans  &trans  &trans    &kp END          &kp PG_DN   &kp LEFT  &kp DOWN  &kp BACKSLASH    &kp RET
  &trans     &trans    &trans     &mo 3               &trans   &mo 3  &trans  &trans  &trans             &trans                &trans    &trans         &trans     &trans
            >;
        };

        layer_3 {
            // -----------------------------------------------------------------------------------------
            // |  F1   |  F2   |    F3    |    F4     |     F5     | F6 |                   ---                | F7  | F8  |  F9  |  F10 | F11 | F12        |
            // | TAB   |       |          |           |            |    | BOOTL |           ---        |  )    | BT1 | BT2 |  BT3 |  BT4 | BT5 | OUTPUT TGL |
            // | CTRL  | MUTE  |  Vol Dn  |  Vol Up   | Play/Pause |    | RESET |           ---        |  ]    | F1  | F2  |  F3  |  F4  | F5  | F6         |
            // | SHIFT | PSCRN |  PSCRN   |   CAPS    |            |    | PG_UP | PG_DOWN | --- | HOME | END   | F7  | F8  |  F9  |  F10 | F11 | F12        |
            // | CRTL  | ALT   |  GUI     |   LOWER   |      GUI        | LOWER | SPACE   | --- | DEL  | SPACE |   RAISE   | LEFT | DOWN | UP  |   RIGHT    |

            bindings = <
             &kp F11             &kp F1        &kp F2          &kp F3   &kp F4      &kp F5                                                                 &kp F6                &kp F7        &kp F8        &kp F9       &kp F10       &kp F11
           &kp GRAVE              &kp Y         &kp U           &kp I    &kp O       &kp P     &kp BACKSPACE                             &bt BT_CLR  &bt BT_SEL 0          &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &out OUT_TOG
           &kp ENTER              &kp H         &kp J           &kp K    &kp L    &kp SEMI  &kp LEFT_BRACKET                      &kp RIGHT_BRACKET        &kp F1                &kp F2        &kp F3        &kp F4        &kp F5        &kp F6
 &mt RIGHT_SHIFT SQT              &kp N         &kp M       &kp COMMA  &kp DOT   &kp SLASH         &kp MINUS   &kp EQUAL  &trans             &trans        &kp F7                &kp F8        &kp F9       &kp F10       &kp F11       &kp F12
    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UP_ARROW  &kp DOWN_ARROW           &bt BT_CLR      &bt BT_SEL 0  &bt BT_NXT  &trans             &trans                &trans                      &trans        &trans        &trans        &trans
            >;
        };
    };
};
